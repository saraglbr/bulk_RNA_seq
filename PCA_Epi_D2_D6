Analysis of bulk RNA-seq data during PGCLC differentiation

Three time-points: EpiLCs (Day 0), day 2 and Day 6 of PGCLC differentiation
Two genotypes: wild type (tg2a) and mutant (TKO)
And two conditions at day 6: with (+) or without (-) cytokines 

Generation of PCA analysis and assessment of top genes contributing to PC1 and PC2


### Libraries
```{r setup, include=FALSE}
library (DESeq2)
library(limma)
library(EnhancedVolcano)
library("ggVennDiagram")
library(org.Mm.eg.db)
library(clusterProfiler)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(pheatmap)
library(enrichplot)
library(dendextend)
library(ggpattern)
```


### Data - loading in raw count matrix////////////////////////////
```{r}
setwd("~/phd/Bulk_RNA/TKO_NO_CYT/")
count_all <- read.csv("count_matrix_all.csv", row.names=1)
colTable <- read.csv ("exp_desing.csv", sep=",", header = 1, row.names = 1)
```


### Run deseq2 for all samples /////////////////////////
```{r}
colorder <- c("tg2a_cyt_D6_1"    ,   "tg2a_cyt_D6_2"   ,  "tg2a_no_cyt_epilc_1", 
"tg2a_no_cyt_epilc_2", "tg2a_no_cyt_D2_1" ,   "tg2a_no_cyt_D2_2"  , 
"tg2a_no_cyt_D6_1"  , "tg2a_no_cyt_D6_2"  ,"tko_epilc_2"     ,   
"tko_epilc_1"   ,      "tko_D2_2"     ,      "tko_D2_1"       ,     
"tko_D6_2"      ,      "tko_D6_1",   "TKO_NO_CYT_D2_1"    , "TKO_NO_CYT_D2_2"   , 
"TKO_NO_CYT_D6_1"  ,    "TKO_NO_CYT_D6_2")

count_sample <- count_all[, colorder]
colnames(count_sample)

count_sample[is.na(count_sample)] <- 0 # set any NA values to 0
dds <- DESeqDataSetFromMatrix(countData= count_sample, 
                              colData=colTable, design= ~ line+stage+cytokines)
dds #all transcripts 25263

#selects all genes/transcripts that have more than 0 in at least one of the samples
notAllZero <- (rowSums(counts(dds))>10) 
dds <- dds[notAllZero,]
dds 

#Stablish Tg2a_no_cyt as control and run deseq2
dds$line <- relevel( dds$line, "tg2a" )
as.data.frame( colData(dds) )
dds_result <- DESeq(dds)

rld <- rlog(dds, blind=FALSE)
expression <- as.data.frame((assay(dds)))
dds <- estimateSizeFactors(dds)
counts <- counts(dds, normalized=TRUE)
expression <- as.data.frame((assay(rld)))
```

#Plot PCA ///////////////////////////////////////////
```{r fig.height=5, fig.width=8}
#PCA calculations
object <- rld
ntop <- 500
intgroup <- c("line", "stage", "cytokines")
# calculate the variance for each gene
rv <- rowVars(assay(object))
# select the ntop genes by variance
select <- order(rv, decreasing=TRUE)[seq_len(min(ntop, length(rv)))]
# perform a PCA on the data in assay(x) for the selected genes
pca <- prcomp(t(assay(object)[select,]))
# the contribution to the total variance for each component
percentVar <- as.data.frame(pca$sdev^2 / sum( pca$sdev^2 ))
if (!all(intgroup %in% names(colData(object)))) {
  stop("the argument 'intgroup' should specify columns of colData(dds)")
}
intgroup.df <- as.data.frame(colData(object)[, intgroup, drop=FALSE])
# add the intgroup factors together to create a new grouping factor
group <- if (length(intgroup) > 1) {
  factor(apply( intgroup.df, 1, paste, collapse=":"))
} else {
  colData(object)[[intgroup]]
}

# Assembly the data for the plot
pcaData <- data.frame(PC1=pca$x[,1], PC2=pca$x[,2], group=group, intgroup.df, name=colnames(object))
pcaData$stage <- factor(pcaData$stage,     # Reorder factor levels
                         c("epilc", "D2", "D6"))
pcaData$line <- factor(pcaData$line,     # Reorder factor levels
                        c("tg2a", "TKO"))
x_axis <-   paste0("PC1: ",round(percentVar[1, ] * 100),"% variance")
y_axis <- paste0("PC2: ",round(percentVar[2, ] * 100),"% variance")

#Plot PCA
pca_plot <-ggplot(pcaData, aes(x = PC1, y = PC2)) +
  geom_point(size =4, 
             aes(color = cytokines,
                    shape = stage, fill = ifelse(cytokines == "yes", line, "white")),  stroke = 1)+
  scale_shape_manual (values = c(21, 22, 25, 24 ))+
  scale_fill_manual (values= c("red2","darkgreen", "white"))+
  scale_color_manual(values = c("darkgreen", "darkgreen") )+
  theme(text = element_text(size = 17)) + 
  xlab(x_axis) + ylab (y_axis)+
  theme_light()
setwd("~/phd/thesis_figures/TKO_chapter/panels/with_D2")
pdf("PCA_all.pdf", height=5, width=8)
pca_plot
dev.off

###Select top genes contributing to each variance and assess their funciton and expression 

#Get the contribution of each gene to each Principipl component (PC)
```{r}
library("factoextra")
summary(pca)
var <- get_pca_var(pca)
names(var)
gene.contribution <- var$contrib

gene.contribution <- as.data.frame(gene.contribution)

#Generate heatmap with top 400 genes contributing to PC1 and PC2
sorted_gene.contribution <- rownames(head(gene.contribution[order(-gene.contribution$Dim.1), ], n=400))
counts_norm <- as.data.frame((assay(rld)))
counts_norm[ ,"gene"]<- row.names(counts_norm)
significant_subset <- subset(counts_norm, counts_norm$gene %in% sorted_gene.contribution)
significant_subset_pc1 <- subset(significant_subset, select = -c(gene)) 

sorted_gene.contribution <- rownames(head(gene.contribution[order(-gene.contribution$Dim.2), ], n=200))
counts_norm[ ,"gene"]<- row.names(counts_norm)
significant_subset <- subset(counts_norm, counts_norm$gene %in% sorted_gene.contribution)
significant_subset_pc2 <- subset(significant_subset, select = -c(gene)) 

significant_subset_join <- rbind(significant_subset_pc1, significant_subset_pc2)

#Separate genes into four different group with similar expression patterns
my_hclust_gene <- hclust(dist(significant_subset_join), method = "complete")
as.dendrogram(my_hclust_gene) %>%
  plot(horiz = TRUE)
my_gene_col <- cutree(tree = as.dendrogram(my_hclust_gene), k = 4)
my_gene_col <- as.data.frame(my_gene_col)


my_colour = list(
    my_gene_col = c("1" = "yellow", "2" = "lightblue", "3" = "pink", "4" = "lightgreen"
                    )
)
heatmap <- pheatmap(significant_subset_join,
         show_rownames = TRUE, 
         fontsize_row = 2,
         col = colorRampPalette(brewer.pal(9, "YlOrRd"))(100),
         fontsize_col=9, main = "All DEGs ",
         annotation_row = my_gene_col,
         angle_col = 45,
         cluster_cols = FALSE,
         annotation_colors = my_colour
         )

setwd("~/phd//Bulk_RNA/TKO_NO_CYT/analysis/DEGS_based_on_PCA")
pdf("heatmap_PCA_defined_genes_NEWORDER.pdf")
heatmap
dev.off()

write.csv(my_gene_col, "genes_in_each_cluster.csv")
```


#GO enrichment for genes in each of the four clusters ///////////////////////////////////
```{r}
my_gene_col <- as.data.frame(my_gene_col)
my_gene_col$gene <- rownames(my_gene_col)
cluster1 <- rownames(my_gene_col[my_gene_col$my_gene_col==1, ])
cluster2 <- rownames(my_gene_col[my_gene_col$my_gene_col==2, ])
cluster3 <- rownames(my_gene_col[my_gene_col$my_gene_col==3, ])
cluster4 <- rownames(my_gene_col[my_gene_col$my_gene_col==4, ])
```
```{r}
entrez_cluster1 = bitr(cluster1, fromType = "SYMBOL", toType = c("ENTREZID"),
                 OrgDb = org.Mm.eg.db)  
ernichment_cluster1 = enrichGO(gene = entrez_cluster1$ENTREZID, 
                      OrgDb = org.Mm.eg.db,readable = T,ont = "BP",
                      pvalueCutoff = 0.05, qvalueCutoff = 0.10)
barplot(ernichment_cluster1, showCategory=10) 

setwd("~/phd//Bulk_RNA/TKO_NO_CYT/analysis/DEGS_based_on_PCA")
pdf("GO_cluster1.pdf")
barplot(ernichment_cluster1, showCategory=10) 
dev.off()
write.csv(ernichment_cluster1, "GO_cluster1.csv")
```

```{r}
entrez_cluster2 = bitr(cluster2, fromType = "SYMBOL", toType = c("ENTREZID"),
                 OrgDb = org.Mm.eg.db)  
ernichment_cluster2 = enrichGO(gene = entrez_cluster2$ENTREZID, 
                      OrgDb = org.Mm.eg.db,readable = T,ont = "BP",
                      pvalueCutoff = 0.05, qvalueCutoff = 0.10)
barplot(ernichment_cluster2, showCategory=10) 

setwd("~/phd//Bulk_RNA/TKO_NO_CYT/analysis/DEGS_based_on_PCA")
pdf("GO_cluster2.pdf")
barplot(ernichment_cluster2, showCategory=10) 
dev.off()
write.csv(ernichment_cluster2, "GO_cluster2.csv")
```
```{r}
entrez_cluster3 = bitr(cluster3, fromType = "SYMBOL", toType = c("ENTREZID"),
                 OrgDb = org.Mm.eg.db)  
ernichment_cluster3 = enrichGO(gene = entrez_cluster3$ENTREZID, 
                      OrgDb = org.Mm.eg.db,readable = T,ont = "BP",
                      pvalueCutoff = 0.05, qvalueCutoff = 0.10)
barplot(ernichment_cluster3, showCategory=10) 

setwd("~/phd//Bulk_RNA/TKO_NO_CYT/analysis/DEGS_based_on_PCA")
pdf("GO_cluster3.pdf")
barplot(ernichment_cluster3, showCategory=10) 
dev.off()
write.csv(ernichment_cluster3, "GO_cluster3.csv")
```
```{r}
entrez_cluster4 = bitr(cluster4, fromType = "SYMBOL", toType = c("ENTREZID"),
                 OrgDb = org.Mm.eg.db)  
ernichment_cluster4 = enrichGO(gene = entrez_cluster4$ENTREZID, 
                      OrgDb = org.Mm.eg.db,readable = T,ont = "BP",
                      pvalueCutoff = 0.05, qvalueCutoff = 0.10)
barplot(ernichment_cluster4, showCategory=10) 

setwd("~/phd//Bulk_RNA/TKO_NO_CYT/analysis/DEGS_based_on_PCA")
pdf("GO_cluster4.pdf")
barplot(ernichment_cluster4, showCategory=10) 
dev.off()
write.csv(ernichment_cluster4, "GO_cluster4.csv")
```
